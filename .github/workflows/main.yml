name: "AutoSign"
on:
  #push: # 触发机制为push操作
  #  branches: main
  workflow_dispatch: # 手动触发
  schedule: # 触发机制为定时任务
    - cron: "0 4 * * *" # 每天12点00分自动执行（默认UTC时区）
jobs:
  AutoSign:
    runs-on: ubuntu-latest # 运行环境为最新的Ubuntu
    steps:
      - name: Checkout
        uses: actions/checkout@v2 # 使用官方提供的checkout 2.0版本获取代码
      - name: Setup node.js
        uses: actions/setup-node@v1 # 使用官方提供的setup-node 1.0版本配置node环境
        with:
          node-version: "14.x" # 使用node 14版本作为运行环境
      - name: Cache cookies
        uses: actions/cache@v2
        with:
          path: ~/cache.tgz # 当前目录下的 cache.tgz 压缩文件，.tgz是压缩unix系统压缩文件格式
          key: ${{ secrets.CACHE_NAME }}-${{ github.run_id }} # CACHE_NAME 缓存名字，防止泄漏，自行设置
          restore-keys: ${{ secrets.CACHE_NAME }}-
      - name: Install dependencies
        run: npm install # 安装依赖
      - name: Run AutoSign
        env:
          SEHUATANG_COOKIES: ${{secrets.SEHUATANG_COOKIES}}
          # BILIBILI_COOKIES: ${{secrets.BILIBILI_COOKIES}}
          BISI_COOKIES: ${{secrets.BISI_COOKIES}}
          POJIE52_COOKIES: ${{secrets.POJIE52_COOKIES}}
          ZODGAME_COOKIES: ${{secrets.ZODGAME_COOKIES}}
          SKETCHUPBAR_COOKIES: ${{secrets.SKETCHUPBAR_COOKIES}}
          BARK_URL: ${{secrets.BARK_URL}}
        run: |
          mkdir .cache
          if [ -e ~/cache.tgz ]; then tar -zxf ~/cache.tgz; fi  # 如果当前目录下有 cache.tgz 压缩文件，则进行解压
          node autoSign.js
          tar -zcf ~/cache.tgz .cache # 把.cache 目录压缩成 cache.tgz 文件
